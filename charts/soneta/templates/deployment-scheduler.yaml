{{- if .Values.image.scheduler -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "soneta.fullname.scheduler" . }}
  labels:
{{ include "soneta.labels.scheduler" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{ include "soneta.labels.scheduler" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "soneta.labels.scheduler" . | indent 8 }}
    spec:
      containers:
        - name: "{{ .Chart.Name }}-server-{{ .Values.image.product}}"
          image: "{{ .Values.image.repository }}soneta/server.{{ .Values.image.product}}:{{ .Values.image.tag }}{{ include "soneta.server.tagPostfix" . }}"
          imagePullPolicy: IfNotPresent
          command: {{ include "soneta.scheduler.command" . }}
          args: 
            {{- include "soneta.scheduler.args" . | nindent 12 }}
          env:
            - name: SCHEDULER
              value: 'True'
            {{- include "soneta.envs.dbconfig" . | nindent 12 }}
            {{- include "soneta.envs" .Values.envs.backend | indent 12 }}
            {{- include "soneta.envs" .Values.envs.scheduler | indent 12 }}
          resources:
            {{- toYaml .Values.resources.scheduler | nindent 12 }}
          volumeMounts:
            {{- if .Values.resources.pvc.enabled }}
            - name: pvc-volume
              mountPath: {{ .Values.resources.pvc.mountPath | quote }}
            {{- end }}
            {{- if .Values.resources.afs.enabled }}
            - name: afs-volume
              mountPath: {{ .Values.resources.afs.mountPath | quote }}
            {{- end }}
            {{- if .Values.listaBazDanych }}
            - name: lista-baz-danych-volume
              mountPath: "/config"
            {{- end }}
      volumes:
        {{- if .Values.resources.pvc.enabled }}
        - name: pvc-volume
          persistentVolumeClaim:
            claimName: {{ include "soneta.fullname.server" . }}
        {{- end }}
        {{- if .Values.resources.afs.enabled }}
        - name: afs-volume
          azureFile:
            secretName: {{ include "soneta.fullname.server" . }}
            shareName: {{ required "Azure storage share name is required" .Values.resources.afs.shareName | quote }}
            readOnly: false
        {{- end }}
        {{- if .Values.listaBazDanych }}
        - name: lista-baz-danych-volume
          configMap:
            name: {{ include "soneta.fullname.server" . }}
            items:
            - key: lista-baz-danych
              path: "lista-baz-danych.xml"
        {{- end }}
      nodeSelector:
        kubernetes.io/os: {{ include "soneta.server.nodeselector.os" . }}
      {{- with .Values.nodeSelector }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
